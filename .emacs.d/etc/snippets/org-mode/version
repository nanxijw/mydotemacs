# -*- mode: snippet -*-
# name: version
# key: version
# --
h1. 测试记录


h2.  服务端版本号修改为$1

h2.  客户端版本号修改为$2

|| {align:left}需求任务文档路径{align} | 无 ||
|| {align:left}程序设计文档路径{align} | 无 ||
|| {align:left}客户端内存泄漏{align} | 无 ||
|| {align:left}奖励是否都有记录LOG日志，奖励调整是否有进行LOG日志调整{align} | 无 ||
|| {align:left}新增金钱奖励时，是否有纳入金钱统计{align} | 无 ||

h2. 一、修改前：

无

h2. 二、修改后：

服务器端内部版本号修改为$1，版本限制修改为$2，客户端版本号修改为$2。

h2. 三、测试思路：

确定服务器端版本号正确。
确定版本限制正确。
确定客户端版本号正确。

h2. 四、适用范例：

无

h2. 五、测试步骤：

* 查看代码，确定客户端版本号修改正确。
** 测试方案：查看代码，确定客户端版本号修改正确。
** 期望结果：版本号修改为$2。
** 实际结果：{color:#0000ff}符合{color} 或 {color:#ff0000}不符合{color}。

* 查看代码，确定公共版本号、服务器端内部版本号修改正确。
** 测试方案：查看代码，确定公共版本号、内部版本号修改正确。
** 期望结果：公共版本号、内部版本号修改为$1。
** 实际结果：{color:#0000ff}符合{color} 或 {color:#ff0000}不符合{color}。

* 编译客户端，确定编译后login.ini中的版本号正确。
** 测试方案：编译客户端，确定编译后login.ini中的版本号正确。
** 期望结果：版本号为$2。
** 实际结果：{color:#0000ff}符合{color} 或 {color:#ff0000}不符合{color}。

* telnet到后台，确定CURRENT_VERSION和SERVER_CURRENT_VERSION的值正确。
** 测试方案：telnet到后台，确定CURRENT_VERSION和SERVER_CURRENT_VERSION的值正确。
** 期望结果：CURRENT_VERSION的值为$2，SERVER_CURRENT_VERSION的值为$1。
** 实际结果：{color:#0000ff}符合{color} 或 {color:#ff0000}不符合{color}。

* 使用非$2版本客户端登录游戏，确定是否能够登录。
** 测试方案：使用非$2版本客户端登录游戏，确定是否能够登录。
** 期望结果：无法登录游戏。
** 实际结果：{color:#0000ff}符合{color} 或 {color:#ff0000}不符合{color}。

* 使用$2版本登录游戏，确定是否能够登录游戏。
** 测试方案：使用$2版本登录游戏，确定是否能够登录游戏。
** 期望结果：能够正常登录游戏。
** 实际结果：{color:#0000ff}符合{color} 或 {color:#ff0000}不符合{color}。

h2. 六、验收结果：{color:#0000ff}通过{color}或{color:red}不通过{color}

h2. 备注 ：无

h2. 测试要点：无

h2. 相关链接 ：{incoming-links:mode=flat|separator=pipe|spaces=@global}无{incoming-links} 